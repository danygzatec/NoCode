{
    "fridaExcelReadersSyntaxWrite": {
        "Name": "ExcelWrite",
        "Description": "Write something in a given cell in a worksheet. ColRow can take values such as A1, D15, etc. RowIndex and colIndex must take numerical values and it starts from 1, or either 'lastrow' or 'lastcol'. Format will be applied to the cell after writting the text. Original format is mainly intended for dates, to identify the origin date parts in the text. Excel formats are different from this, refer to https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-stringsfor further information. ",
        "Parameters": "<something> <worksheetKey> <ColRow> <rowIndex> <colIndex> <format> <originalFormat>",
        "Syntax1": "Write <someting> in <worksheetKey> cell <ColRow>",
        "Syntax2": "Write <something> in <worksheetKey> cell <ColRow> with format <format>",
        "Syntax3": "Write <something> in <worksheetKey> cell <ColRow> with format <format> source <originalFormat>",
        "Syntax4": "Write <something> in <worksheetKey> row <rowIndex> and column <colIndex>",
        "Example1": "Write 'Nombres' in hoja1 cell E1",
        "Example2": "Write '05/07/202' in hoja1 cell E1 with format dd/mm/yyyy",
        "Example3": "Write '05-07-2020 14:10' in hoja1 cell E1 with format dd/mm/yyyy hh:mm source dd-MM-yyyy hh:mm",
        "Example4": "Write '115' in hoja1 cell F3 with format[Red][< 100]0;[Blue] [>=100]0",
        "Example5": "Write '12345678' in hoja1 cell F1 with format #,###.00",
        "Example6": "Write 'Nombres' in hoja1 row 1 and column 5",
        "Example7": "Write 'Nombres' in hoja1 row lastrow and column lastcol"
    },
    "fridaExcelReadersSyntaxRemoveDuplicate":{
        "Name": "RemoveDuplicate",
        "Description": "Removes the duplicate rows from a given sheet. When many column indexes are specified, the deletion will be based on the repetition of values in all those columns. Indexes start with 1. ",
        "Parameters": "<worksheetKey> <columnIndex> <hasReader>",
        "Syntax1": "RemoveDuplicates from <worksheetKey>",
        "Syntax2": "RemoveDuplicates from <worksheetKey> with_header <hasHeader>",
        "Syntax3": "RemoveDuplicates from <worksheetKey> at [<columnIdnex1, columnIndex2,...,columnIndex>]",
        "Syntax4": "RemoveDuplicates from <worksheetKey> at [<columnIdnex1, columnIndex2,...,columnIndex>] with_header <hasHeader>",
        "Example1": "RemoveDuplicates from WSheet1",
        "Example2": "RemoveDuplicates from WSheet1 at [2,8,9]",
        "Example3": "RemoveDuplicates from WSheet1 at [1] with_header Y"
    },
    "fridaExcelReadersSyntaxNewWorkbook":{
        "Name": "NewWorkbook",
        "Description": "Creates a new Workbook in a path where the client wants (only creates file of type 'xlsx'). You CANNOT use special characters that Windows does NOT allow. WorkbookName is also saved as a variable. 'Create i' syntax will save the workbook without saving a variable. ",
        "Parameters": "<path> <workbookName> <pathWithName>",
        "Syntax1": "NewWB in '<path>' as <workbookName>",
        "Syntax2": "NewWB in {<path>} as {<workbookName>}",
        "Syntax3": "NewWB create in {<pathWithName>}",
        "Example1": "NewWB in {C/Users/user_name/Desktop} as {Book_03-03-2019}",
        "Example2": "NewWB create in {C:/Users/user_name/Desktop/Book_03-03-2019.xlsx}"
    },
    "fridaExcelReadersSyntaxSortColumns":{
        "Name": "SortColumns",
        "Description": "Sort by a Column. Maximum 3 columns to sort in a worksheet. Order direction must be set (ascending/descending). If header is Yes, it will not sort the first value, since it considers it to be a header.",
        "Parameters": "<worksheetKey> <colIndex> <order> <isHeader>",
        "Syntax1": "SortColumns in <worksheetKey> by column {<colindex>} <order> header <isHeader>",
        "Syntax2": "SortColumns in <worksheetKey> in usedRange by columns {<colindex|order1>, <colindex2|order2>, <colindex3|order3>} header <isHeader> -Function still under development",
        "Example1": "SortColumns in WSName1 by column {10} ascending header Yes",
        "Example2": "SortColumns in WSName1 in UsedRange by columns {1/ascending,2/descending,3/descending} header Yes",
        "Example3": "SortColumns in WSName1 in B10:D18 by columns {1/asc,2/desc} header No"
    },
    "fridaExcelReadersSyntaxInsertColumn":{
        "Name": "InsertColumn",
        "Description": "Inserts a Column at index (1-based). ",
        "Parameters": "<worksheetKey> <colIndex>",
        "Syntax1": "InsertCol in <worksheetKey> at <colIndex>",
        "Example1": "InsertCol in Sheet1 at 6"
    },
    "fridaExcelReadersSyntaxUploadFile":{
        "Name": "LoadWBook",
        "Description": "Opens a given workbook and saves a variable for future reference. Optional parameters are: Password'<password>', UpdateLinks:yes|no  ",
        "Parameters": "<workbookPath> <workbookKey> <password> <updateLinksAnswer> <updLinks>",
        "Syntax1": "LoadWBook <workbookPath> as <workbookKey>",
        "Syntax2": "LoadWBook <workbookPath> as <workbookKey> with_parameters Password: <password>",
        "Syntax3": "LoadWBook <workbookPath> as <workbookKey> with_parameters UpdateLinks: <updLinks>",
        "Syntax4": "LoadWBook <workbookPath> as <workbookKey> with_parameters Password: <password> UpdateLinks: <updLinks>",
        "Example1": "LoadWBook 'C:/Users/productivity/Desktop/Book1.xlsx' as book1",
        "Example2": "LoadWBook 'C:/Users/productivity/Desktop/SecretBook.xlsx' as book1 with_parameters Password: '1234'",
        "Example3": "LoadWBook 'C:/Users/productivity/Desktop/Summary.xlsx' as book1 with_parameters UpdateLinks: yes"
    },
    "fridaExcelReadersSyntaxCountElements":{
        "Name": "CountElements",
        "Description": "Counts the elements inside a list or dictionary variable. For strings it counts the number of chars. Angle brackets (<>) are not required.",
        "Parameters": "<varName> <varName2>",
        "Syntax1": "CountItems in <varName> and save_as <varName2>",
        "Example1": "CountItems in list and save_as users",
        "Example2": "CountItems in string and save_as numChars",
        "Example3": "CountItems in rows and save_as filas"
    },
    "fridaExcelReadersSyntaxSubstring":{
        "Name": "Substring",
        "Description": "Extracts part of the content of a string, given the input and the startIndex. Optionally, you can ask for a length. Given the string 'Hello world!', a substring starting in 4 will return 'o world!'; and a substring with length 4 will return 'o wor'.",
        "Parameters": "<inputString> <startIndex> <strongLength> <newVarName>",
        "Syntax1": "Substring <inputString> start <startIndex> and save as <newVarName>",
        "Syntax2": "Substring <inputString> start <startIndex> length <stringLength> and save as <newVarName>",
        "Example1": "Substring 'Hello world!' start at 0 and save as 'subString'",
        "Example2": "Substring 'Hello world' start 3 length 5 and sabe as 'newString'"
    },
    "fridaExcelReadersSyntaxCopyColumn":{
        "Name": "CopyColumn",
        "Description": "Copy the full column to another place (in the same sheet or another), the value indicated after 'start at' in the instruction is the offset value, hence if value equals 1, it will be displaced one row, pasting the balue in the second row.",
        "Parameters": "<worksheetKeyOrig> <worksheetKeyDest> <columnIndexOrig> <columnIndexDest> <rowOffsetOrig> <rowOffsetDest>",
        "Syntax1": "CopyColumn <columnIndexOrig> from <worksheetKeyOrig> start_at <rowOffsetOrig> to the sheet <worksheetKeyDest> in column <columnIndexdest> start_at <rowOffsetDest>",
        "Syntax2": "CopyColumn <columnIndexOrig> from <worksheetKeyOrig> to the sheet <worksheetKeyDest> in column <columnIndexDest> start_at <rowOffsetDest> --visible",
        "Syntax3": "CopyColumn value <columnIndexOrig> from <worksheetKeyOrig> start_at <rowOffsetOrig> to the sheet <worksheetKeyDest> in column <columnIndexDest> start_at <rowOffsetDest>",
        "Example1": "CopyColumn 10 from hoja2 start_at 1 to the sheet hoja3 in column 4 start_at 1",
        "Example2": "CopyColumn value 20 from hojaCostos start_at 2 to the sheet hoja4 in column 4 start_at 3"
    }
}